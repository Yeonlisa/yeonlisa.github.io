{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","className","글제목","누른제목","Profile","changeName","setState","name","state","age","this","onClick","React","Component","App","useState","글제목변경","따봉","따봉변경","modal","modal변경","누른제목변경","입력값","입력값변경","map","글","i","onChange","e","target","value","arrayCopy","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAe,I,YCoDf,SAASA,EAAMC,GACb,OACE,sBAAKC,UAAU,QAAf,UACE,6BAAMD,EAAME,mBAAIF,EAAMG,4BACtB,6CACA,4D,IAKAC,E,kDACJ,aAAe,IAAD,8BACZ,gBAIFC,WAAa,WACX,EAAKC,SAAU,CAAEC,KAAM,SAJvB,EAAKC,MAAQ,CAAED,KAAO,OAAQE,IAAM,IAFxB,E,0CASd,WACE,OACE,gCACE,sEACA,8CAAQC,KAAKF,MAAMD,KAAnB,0BACA,wBAAQI,QAAUD,KAAKL,WAAvB,iC,GAfcO,IAAMC,WAuBbC,EAhFf,WACE,MAAmBC,mBAAS,CAAC,wCAAW,wCAAW,oCAAnD,mBAAKb,EAAL,KAAUc,EAAV,KACA,EAAiBD,mBAAS,GAA1B,mBAAKE,EAAL,KAASC,EAAT,KACA,EAAuBH,oBAAS,GAAhC,mBAAKI,EAAL,KAAYC,EAAZ,KACA,EAAqBL,mBAAS,GAA9B,mBAAKZ,EAAL,KAAWkB,EAAX,KACA,EAAmBN,mBAAS,IAA5B,mBAAKO,EAAL,KAAUC,EAAV,KAEA,OACE,sBAAKtB,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sDAIAC,EAAIsB,KAAI,SAACC,EAAGC,GACV,OACE,sBAAKzB,UAAU,OAAf,UACE,qBAAIU,QAAU,WAAOU,EAAOK,IAA5B,UAAoCD,EAApC,IAAwC,sBAAMd,QAAS,WAAQO,EAAKD,EAAG,IAA/B,0BAAxC,IAAwFA,KACxF,8DACA,yBAHyBS,MASjC,sBAAKzB,UAAU,UAAf,UACE,uBAAO0B,SAAW,SAACC,GAAML,EAAMK,EAAEC,OAAOC,UACxC,wBAAQnB,QAAU,WAChB,IAAIoB,EAAS,YAAO7B,GACpB6B,EAAUC,QAAQV,GAClBN,EAAOe,IAHT,6BAOF,cAAC,EAAD,IAEA,wBAAQpB,QAAU,WAAOS,GAASD,IAAlC,uCAGY,IAAVA,EACE,cAACpB,EAAD,CAAO,qBAAKG,EAAK,2BAAMC,IACvB,SClCK8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ed54954.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/*eslint-disable*/\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  let [글제목, 글제목변경] = useState(['남자코트 추천', '강남 우동맛집', '리액트 독학']);\n  let [따봉, 따봉변경] = useState(0);\n  let [modal, modal변경] = useState(false);\n  let [누른제목, 누른제목변경] = useState(0);\n  let [입력값, 입력값변경] = useState('');\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div>개발 Blog</div>\n      </div>\n\n      {\n        글제목.map((글, i) => {\n          return (\n            <div className=\"list\" key={i}>\n              <h3 onClick={ () => {누른제목변경(i)} }>{ 글 } <span onClick={() => { 따봉변경(따봉+1) }}>👍</span> {따봉}</h3>\n              <p>2월 18일 발행</p>\n              <hr/>\n            </div>\n          )\n        })\n      }\n\n      <div className=\"publish\">\n        <input onChange={ (e) =>{입력값변경(e.target.value)} } />\n        <button onClick={ () => {\n          var arrayCopy = [...글제목];\n          arrayCopy.unshift(입력값);\n          글제목변경( arrayCopy );\n        } }>저장</button>\n      </div>\n      \n      <Profile />\n      \n      <button onClick={ () => {modal변경(!modal)} }>열고닫기</button>\n\n      {\n        modal === true \n        ? <Modal 글제목={글제목} 누른제목={누른제목}></Modal>\n        : null\n      }\n    </div>\n  );\n}\n\nfunction Modal(props) {\n  return (\n    <div className=\"modal\">\n      <h2>{ props.글제목[props.누른제목] }</h2>\n      <p>날짜</p>\n      <p>상세내용</p>\n    </div>\n  )\n}\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = { name : 'Yeon', age : 31 }\n  }\n\n  changeName = () => {\n    this.setState( { name: 'Lee' } )\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>프로필입니다</h3>\n        <p>저는 { this.state.name } 입니다.</p>\n        <button onClick={ this.changeName }>버튼</button>\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}